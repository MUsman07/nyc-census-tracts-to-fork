[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Income and Race in New York City",
    "section": "",
    "text": "execute: echo: false —\n\nlibrary(tidyverse)\n\nx &lt;- read_csv(\"data/nyc_tracts.csv\")\n\n\n# Load required libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(stringr)\n\n# Assuming your data is stored in a variable called 'x'\n# First, let's clean and prepare the data\n\n# Extract borough information from tract names\nx_clean &lt;- x %&gt;%\n  # Remove rows with missing income data\n  filter(!is.na(med_income)) %&gt;%\n  # Extract borough from tract name\n  mutate(\n    borough = case_when(\n      str_detect(tract, \"Queens County\") ~ \"Queens\",\n      str_detect(tract, \"Kings County\") ~ \"Brooklyn\", \n      str_detect(tract, \"New York County\") ~ \"Manhattan\",\n      str_detect(tract, \"Bronx County\") ~ \"Bronx\",\n      str_detect(tract, \"Richmond County\") ~ \"Staten Island\",\n      TRUE ~ \"Other\"\n    )\n  ) %&gt;%\n  # Clean up race categories\n  mutate(\n    race = case_when(\n      str_detect(race, \"White\") ~ \"White\",\n      str_detect(race, \"Black\") ~ \"Black\",\n      str_detect(race, \"Hisp\") ~ \"Hispanic\",\n      str_detect(race, \"Asian\") ~ \"Asian\",\n      TRUE ~ race\n    )\n  )\n\n# Create a comprehensive visualization\np1 &lt;- ggplot(x_clean, aes(x = race, y = med_income, fill = race)) +\n  geom_boxplot(alpha = 0.7, outlier.alpha = 0.5) +\n  geom_jitter(alpha = 0.3, width = 0.2, size = 0.5) +\n  facet_wrap(~borough, scales = \"free_x\") +\n  scale_y_continuous(labels = dollar_format(scale = 1e-3, suffix = \"K\")) +\n  scale_fill_viridis_d(name = \"Race/Ethnicity\") +\n  labs(\n    title = \"Median Income Distribution by Race Across NYC Boroughs\",\n    subtitle = \"Distribution of median household income by census tract\",\n    x = \"Race/Ethnicity\",\n    y = \"Median Household Income\",\n    caption = \"Data: Census tract-level median income by race\\nNote: Each point represents a census tract\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    strip.text = element_text(face = \"bold\"),\n    legend.position = \"bottom\"\n  )\n\n# Create a summary statistics table\nsummary_stats &lt;- x_clean %&gt;%\n  group_by(race, borough) %&gt;%\n  summarise(\n    count = n(),\n    median_income = median(med_income, na.rm = TRUE),\n    mean_income = mean(med_income, na.rm = TRUE),\n    .groups = 'drop'\n  ) %&gt;%\n  arrange(borough, desc(median_income))\n\nprint(\"Summary Statistics by Race and Borough:\")\n\n[1] \"Summary Statistics by Race and Borough:\"\n\nprint(summary_stats)\n\n# A tibble: 19 × 5\n   race     borough       count median_income mean_income\n   &lt;chr&gt;    &lt;chr&gt;         &lt;int&gt;         &lt;dbl&gt;       &lt;dbl&gt;\n 1 White    Bronx            28        96758       97306.\n 2 Asian    Bronx             3        63449       63355.\n 3 Black    Bronx            60        61870       62947.\n 4 Hispanic Bronx           246        42336       47397.\n 5 White    Brooklyn        355        87667       99847.\n 6 Black    Brooklyn        275        71218       69006.\n 7 Hispanic Brooklyn         79        64107       66577.\n 8 Asian    Brooklyn         63        63807       66327.\n 9 White    Manhattan       194       146970      149620.\n10 Black    Manhattan        34        63480.      61882.\n11 Asian    Manhattan         7        46615       54108.\n12 Hispanic Manhattan        64        44840.      49653.\n13 White    Queens          196        99903      100814.\n14 Black    Queens          141        92115       89886.\n15 Asian    Queens          179        79631       80586.\n16 Hispanic Queens          160        75453       77014.\n17 White    Staten Island    95       107292      104819.\n18 Hispanic Staten Island    11        73380       69552.\n19 Black    Staten Island    11        59732       64919.\n\n# Display the main plot\nprint(p1)\n\n\n\n\n\n\n\n# Create an additional plot showing overall distribution by race\np2 &lt;- ggplot(x_clean, aes(x = reorder(race, med_income, median), y = med_income, fill = race)) +\n  geom_violin(alpha = 0.7) +\n  geom_boxplot(width = 0.2, alpha = 0.8, outlier.alpha = 0.5) +\n  scale_y_continuous(labels = dollar_format(scale = 1e-3, suffix = \"K\")) +\n  scale_fill_viridis_d(name = \"Race/Ethnicity\") +\n  labs(\n    title = \"Overall Income Distribution by Race in NYC\",\n    subtitle = \"Violin plots showing income distribution density\",\n    x = \"Race/Ethnicity (ordered by median income)\",\n    y = \"Median Household Income\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  coord_flip()\n\nprint(p2)\n\n\n\n\n\n\n\n# Create a third plot showing borough-level patterns\nborough_summary &lt;- x_clean %&gt;%\n  group_by(borough, race) %&gt;%\n  summarise(\n    median_income = median(med_income, na.rm = TRUE),\n    count = n(),\n    .groups = 'drop'\n  ) %&gt;%\n  filter(count &gt;= 5)  # Only show combinations with at least 5 observations\n\np3 &lt;- ggplot(borough_summary, aes(x = borough, y = median_income, fill = race)) +\n  geom_col(position = \"dodge\", alpha = 0.8) +\n  scale_y_continuous(labels = dollar_format(scale = 1e-3, suffix = \"K\")) +\n  scale_fill_viridis_d(name = \"Race/Ethnicity\") +\n  labs(\n    title = \"Median Income by Race and Borough\",\n    subtitle = \"Comparing median household income across NYC boroughs\",\n    x = \"Borough\",\n    y = \"Median Household Income\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    legend.position = \"bottom\"\n  )\n\nprint(p3)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "New York City"
  }
]